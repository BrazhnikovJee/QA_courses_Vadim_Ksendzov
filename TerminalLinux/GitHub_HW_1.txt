~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
JSON
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#1. Создать внешний репозиторий c названием JSON. - Зайти в раздел Repositories на Github. Нажать "NEW". Создать репозиторий "JSON"
#2. Клонировать репозиторий JSON на локальный компьютер. - git clone https://github.com/BrazhnikovJee/JSON.git
#3. Внутри локального JSON создать файл “new.json”. - touch new.json
#4. Добавить файл под гит. - git add new.json
#5. Закоммитить файл. - git commit -m "json test"
#6. Отправить файл на внешний GitHub репозиторий. - git push
#7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - vi new.json
#8. Отправить изменения на внешний репозиторий. - git add new.json git commit -m "Изменил данные в new.json" git push
#9. Создать файл preferences.json - preferences.json
#10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. vi preferences.json
#11. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - touch skills.json; vi skills.json
#12. Отправить сразу 2 файла на внешний репозиторий. - git add .; git commit -m "13 and 14 and 15"; git push
#13. На веб интерфейсе создать файл - Сreate New File
#14. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. - Edit this file 
#15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Commit changes
#16. Синхронизировать внешний и локальный репозиторий JSON - git pull
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
XML
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#1. Создать внешний репозиторий c названием XML. - Зайти в раздел Repositories на Github. Нажать "NEW". Создать репозиторий "XML"
#2. Клонировать репозиторий XML на локальный компьютер. - git clone https://github.com/BrazhnikovJee/XML.git
#3. Внутри локального XML создать файл “new.xml”. - touch new.xml
#4. Добавить файл под гит. - git add new.xml
#5. Закоммитить файл. - git commit -m “test”
#6. Отправить файл на внешний GitHub репозиторий. - git push
#7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. - vi new.xml
#8. Отправить изменения на внешний репозиторий. - git add new.xml; git commit -m "Modifided file"; git push
#9. Создать файл preferences.xml - touch preferences.xml
#10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. - vi preferences.xml
#11. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - touch skills.xml; vi skills.xml
#12. Сделать коммит в одну строку. - git add .; git commit -m “new file”
#13. Отправить сразу 2 файла на внешний репозиторий. - git push
#14. На веб интерфейсе создать файл bug_report.xml. - Сreate New File
#15. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. - Edit this file 
#16. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Commit changes
#17. Синхронизировать внешний и локальный репозиторий XML - git pull
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TXT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#1. Создать внешний репозиторий c названием TXT. - Зайти в раздел Repositories на Github. Нажать "NEW". Создать репозиторий "TXT"
#2. Клонировать репозиторий TXT на локальный компьютер. - git clone https://github.com/BrazhnikovJee/TXT.git
#3. Внутри локального TXT создать файл “new.txt”. - touch new.txt
#4. Добавить файл под гит. - git add new.txt
#5. Закоммитить файл. - git commit -m "New File"
#6. Отправить файл на внешний GitHub репозиторий. - git push
#7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. - vi new.txt
#8. Отправить изменения на внешний репозиторий. - git add new.txt; git commit -m “Modifided file”; git push
#9. Создать файл preferences.txt - touch preferences.txt
#10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. - vi preferences.txt
#11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - touch skills.txt; vi skills.txt
#12. Сделать коммит в одну строку. - git add .; git commit -m “new file”
#13. Отправить сразу 2 файла на внешний репозиторий. - git push
#14. На веб интерфейсе создать файл bug_report.txt. - Create new file
#15. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. - Edit this file
#16. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Commit changes
#17. Синхронизировать внешний и локальный репозиторий TXT -git pull
